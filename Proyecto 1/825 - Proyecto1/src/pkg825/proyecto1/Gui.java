/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkg825.proyecto1;

import com.sun.glass.events.KeyEvent;
import static java.lang.Integer.parseInt;
import java.util.Random;

/**
 *
 * @author Adolfo
 */
public class Gui extends javax.swing.JFrame {

    /**
     * Creates new form Gui
     */
    public Gui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        j1 = new javax.swing.JTextField();
        j2 = new javax.swing.JTextField();
        j3 = new javax.swing.JTextField();
        j4 = new javax.swing.JTextField();
        j5 = new javax.swing.JTextField();
        j6 = new javax.swing.JTextField();
        j7 = new javax.swing.JTextField();
        j8 = new javax.swing.JTextField();
        j9 = new javax.swing.JTextField();
        j10 = new javax.swing.JTextField();
        j11 = new javax.swing.JTextField();
        j12 = new javax.swing.JTextField();
        j13 = new javax.swing.JTextField();
        j14 = new javax.swing.JTextField();
        j15 = new javax.swing.JTextField();
        j16 = new javax.swing.JTextField();
        j17 = new javax.swing.JTextField();
        j18 = new javax.swing.JTextField();
        j19 = new javax.swing.JTextField();
        j20 = new javax.swing.JTextField();
        j21 = new javax.swing.JTextField();
        j22 = new javax.swing.JTextField();
        j23 = new javax.swing.JTextField();
        j24 = new javax.swing.JTextField();
        j25 = new javax.swing.JTextField();
        l1 = new javax.swing.JLabel();
        l2 = new javax.swing.JLabel();
        l3 = new javax.swing.JLabel();
        l4 = new javax.swing.JLabel();
        l5 = new javax.swing.JLabel();
        l7 = new javax.swing.JLabel();
        l8 = new javax.swing.JLabel();
        l9 = new javax.swing.JLabel();
        l10 = new javax.swing.JLabel();
        l11 = new javax.swing.JLabel();
        b1 = new javax.swing.JButton();
        b2 = new javax.swing.JButton();
        b3 = new javax.swing.JButton();
        b4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jresultado = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        j1.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        j1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        j1.setName(""); // NOI18N
        j1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j1ActionPerformed(evt);
            }
        });
        j1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                j1KeyTyped(evt);
            }
        });

        j2.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        j2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        j2.setName(""); // NOI18N
        j2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j2ActionPerformed(evt);
            }
        });
        j2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                j2KeyTyped(evt);
            }
        });

        j3.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        j3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        j3.setName(""); // NOI18N
        j3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j3ActionPerformed(evt);
            }
        });
        j3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                j3KeyTyped(evt);
            }
        });

        j4.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        j4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        j4.setName(""); // NOI18N
        j4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j4ActionPerformed(evt);
            }
        });
        j4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                j4KeyTyped(evt);
            }
        });

        j5.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        j5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        j5.setName(""); // NOI18N
        j5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j5ActionPerformed(evt);
            }
        });
        j5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                j5KeyTyped(evt);
            }
        });

        j6.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        j6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        j6.setName(""); // NOI18N
        j6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j6ActionPerformed(evt);
            }
        });
        j6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                j6KeyTyped(evt);
            }
        });

        j7.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        j7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        j7.setName(""); // NOI18N
        j7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j7ActionPerformed(evt);
            }
        });
        j7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                j7KeyTyped(evt);
            }
        });

        j8.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        j8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        j8.setName(""); // NOI18N
        j8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j8ActionPerformed(evt);
            }
        });
        j8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                j8KeyTyped(evt);
            }
        });

        j9.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        j9.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        j9.setName(""); // NOI18N
        j9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j9ActionPerformed(evt);
            }
        });
        j9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                j9KeyTyped(evt);
            }
        });

        j10.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        j10.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        j10.setName(""); // NOI18N
        j10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j10ActionPerformed(evt);
            }
        });
        j10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                j10KeyTyped(evt);
            }
        });

        j11.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        j11.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        j11.setName(""); // NOI18N
        j11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j11ActionPerformed(evt);
            }
        });
        j11.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                j11KeyTyped(evt);
            }
        });

        j12.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        j12.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        j12.setName(""); // NOI18N
        j12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j12ActionPerformed(evt);
            }
        });
        j12.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                j12KeyTyped(evt);
            }
        });

        j13.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        j13.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        j13.setName(""); // NOI18N
        j13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j13ActionPerformed(evt);
            }
        });
        j13.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                j13KeyTyped(evt);
            }
        });

        j14.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        j14.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        j14.setName(""); // NOI18N
        j14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j14ActionPerformed(evt);
            }
        });
        j14.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                j14KeyTyped(evt);
            }
        });

        j15.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        j15.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        j15.setName(""); // NOI18N
        j15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j15ActionPerformed(evt);
            }
        });
        j15.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                j15KeyTyped(evt);
            }
        });

        j16.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        j16.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        j16.setName(""); // NOI18N
        j16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j16ActionPerformed(evt);
            }
        });
        j16.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                j16KeyTyped(evt);
            }
        });

        j17.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        j17.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        j17.setName(""); // NOI18N
        j17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j17ActionPerformed(evt);
            }
        });
        j17.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                j17KeyTyped(evt);
            }
        });

        j18.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        j18.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        j18.setName(""); // NOI18N
        j18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j18ActionPerformed(evt);
            }
        });
        j18.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                j18KeyTyped(evt);
            }
        });

        j19.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        j19.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        j19.setName(""); // NOI18N
        j19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j19ActionPerformed(evt);
            }
        });
        j19.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                j19KeyTyped(evt);
            }
        });

        j20.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        j20.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        j20.setName(""); // NOI18N
        j20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j20ActionPerformed(evt);
            }
        });
        j20.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                j20KeyTyped(evt);
            }
        });

        j21.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        j21.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        j21.setName(""); // NOI18N
        j21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j21ActionPerformed(evt);
            }
        });
        j21.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                j21KeyTyped(evt);
            }
        });

        j22.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        j22.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        j22.setName(""); // NOI18N
        j22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j22ActionPerformed(evt);
            }
        });
        j22.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                j22KeyTyped(evt);
            }
        });

        j23.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        j23.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        j23.setName(""); // NOI18N
        j23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j23ActionPerformed(evt);
            }
        });
        j23.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                j23KeyTyped(evt);
            }
        });

        j24.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        j24.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        j24.setName(""); // NOI18N
        j24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j24ActionPerformed(evt);
            }
        });
        j24.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                j24KeyTyped(evt);
            }
        });

        j25.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        j25.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        j25.setName(""); // NOI18N
        j25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j25ActionPerformed(evt);
            }
        });
        j25.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                j25KeyTyped(evt);
            }
        });

        l1.setFont(new java.awt.Font("Cambria", 1, 48)); // NOI18N
        l1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l1.setText("A");

        l2.setFont(new java.awt.Font("Cambria", 1, 48)); // NOI18N
        l2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l2.setText("B");

        l3.setFont(new java.awt.Font("Cambria", 1, 48)); // NOI18N
        l3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l3.setText("C");

        l4.setFont(new java.awt.Font("Cambria", 1, 48)); // NOI18N
        l4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l4.setText("D");

        l5.setFont(new java.awt.Font("Cambria", 1, 48)); // NOI18N
        l5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l5.setText("E");

        l7.setFont(new java.awt.Font("Cambria", 1, 48)); // NOI18N
        l7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l7.setText("A");

        l8.setFont(new java.awt.Font("Cambria", 1, 48)); // NOI18N
        l8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l8.setText("B");

        l9.setFont(new java.awt.Font("Cambria", 1, 48)); // NOI18N
        l9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l9.setText("C");

        l10.setFont(new java.awt.Font("Cambria", 1, 48)); // NOI18N
        l10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l10.setText("D");

        l11.setFont(new java.awt.Font("Cambria", 1, 48)); // NOI18N
        l11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l11.setText("E");

        b1.setText("Generar Aleatorios");
        b1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1ActionPerformed(evt);
            }
        });

        b2.setText("Calcular Simetría");
        b2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b2ActionPerformed(evt);
            }
        });

        b3.setBackground(new java.awt.Color(102, 255, 0));
        b3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        b3.setText("Ruta más Corta");
        b3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b3ActionPerformed(evt);
            }
        });

        b4.setBackground(new java.awt.Color(255, 0, 0));
        b4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        b4.setForeground(new java.awt.Color(255, 255, 255));
        b4.setText("Salir");
        b4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b4ActionPerformed(evt);
            }
        });

        jresultado.setEditable(false);
        jresultado.setColumns(20);
        jresultado.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jresultado.setRows(5);
        jScrollPane1.setViewportView(jresultado);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(257, 257, 257)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(b1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(l10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(l11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(j16, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(j21, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(l7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(j1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(l1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(l9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(j11, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(l8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(j6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(j2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(j3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(j4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(j5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(j7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(j8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(j9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(j10, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(j12, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(j13, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(j14, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(j15, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(j17, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(j18, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(j19, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(j20, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(j22, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(j23, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(j24, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(j25, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(l2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(l3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(l4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(l5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(225, 225, 225))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(l1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(b1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(l7, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(l8, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(b2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(13, 13, 13)
                                        .addComponent(b3, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(b4, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap(201, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(l9, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(65, 65, 65)
                                        .addComponent(l11, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap(177, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(j6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(j11, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(l10, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(j16, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(74, 74, 74)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(l2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(j2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(j7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j10, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(j12, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j13, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j14, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j15, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(j17, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j18, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j19, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j20, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(j22, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j23, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j24, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j25, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j21, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(175, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void j1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j1ActionPerformed

    private void j2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j2ActionPerformed

    private void j3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j3ActionPerformed

    private void j4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j4ActionPerformed

    private void j5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j5ActionPerformed

    private void j6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j6ActionPerformed

    private void j7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j7ActionPerformed

    private void j8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j8ActionPerformed

    private void j9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j9ActionPerformed

    private void j10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j10ActionPerformed

    private void j11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j11ActionPerformed

    private void j12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j12ActionPerformed

    private void j13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j13ActionPerformed

    private void j14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j14ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j14ActionPerformed

    private void j15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j15ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j15ActionPerformed

    private void j16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j16ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j16ActionPerformed

    private void j17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j17ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j17ActionPerformed

    private void j18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j18ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j18ActionPerformed

    private void j19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j19ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j19ActionPerformed

    private void j20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j20ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j20ActionPerformed

    private void j21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j21ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j21ActionPerformed

    private void j22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j22ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j22ActionPerformed

    private void j23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j23ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j23ActionPerformed

    private void j24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j24ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j24ActionPerformed

    private void j25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j25ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j25ActionPerformed

    private void j1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_j1KeyTyped
        // TODO add your handling code here:
         char c=evt.getKeyChar();
        
        if (!(Character.isDigit(c)) || (c==KeyEvent.VK_BACKSPACE) || (c==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_j1KeyTyped

    private void j2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_j2KeyTyped
        // TODO add your handling code here:
         char c=evt.getKeyChar();
        
        if (!(Character.isDigit(c)) || (c==KeyEvent.VK_BACKSPACE) || (c==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_j2KeyTyped

    private void j3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_j3KeyTyped
        // TODO add your handling code here:
         char c=evt.getKeyChar();
        
        if (!(Character.isDigit(c)) || (c==KeyEvent.VK_BACKSPACE) || (c==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_j3KeyTyped

    private void j4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_j4KeyTyped
        // TODO add your handling code here:
         char c=evt.getKeyChar();
        
        if (!(Character.isDigit(c)) || (c==KeyEvent.VK_BACKSPACE) || (c==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_j4KeyTyped

    private void j5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_j5KeyTyped
        // TODO add your handling code here:
         char c=evt.getKeyChar();
        
        if (!(Character.isDigit(c)) || (c==KeyEvent.VK_BACKSPACE) || (c==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_j5KeyTyped

    private void j6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_j6KeyTyped
        // TODO add your handling code here:
         char c=evt.getKeyChar();
        
        if (!(Character.isDigit(c)) || (c==KeyEvent.VK_BACKSPACE) || (c==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_j6KeyTyped

    private void j7KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_j7KeyTyped
        // TODO add your handling code here:
         char c=evt.getKeyChar();
        
        if (!(Character.isDigit(c)) || (c==KeyEvent.VK_BACKSPACE) || (c==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_j7KeyTyped

    private void j8KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_j8KeyTyped
        // TODO add your handling code here:
         char c=evt.getKeyChar();
        
        if (!(Character.isDigit(c)) || (c==KeyEvent.VK_BACKSPACE) || (c==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_j8KeyTyped

    private void j9KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_j9KeyTyped
        // TODO add your handling code here:
         char c=evt.getKeyChar();
        
        if (!(Character.isDigit(c)) || (c==KeyEvent.VK_BACKSPACE) || (c==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_j9KeyTyped

    private void j10KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_j10KeyTyped
        // TODO add your handling code here:
         char c=evt.getKeyChar();
        
        if (!(Character.isDigit(c)) || (c==KeyEvent.VK_BACKSPACE) || (c==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_j10KeyTyped

    private void j11KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_j11KeyTyped
        // TODO add your handling code here:
         char c=evt.getKeyChar();
        
        if (!(Character.isDigit(c)) || (c==KeyEvent.VK_BACKSPACE) || (c==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_j11KeyTyped

    private void j12KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_j12KeyTyped
        // TODO add your handling code here:
         char c=evt.getKeyChar();
        
        if (!(Character.isDigit(c)) || (c==KeyEvent.VK_BACKSPACE) || (c==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_j12KeyTyped

    private void j13KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_j13KeyTyped
        // TODO add your handling code here:
         char c=evt.getKeyChar();
        
        if (!(Character.isDigit(c)) || (c==KeyEvent.VK_BACKSPACE) || (c==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_j13KeyTyped

    private void j14KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_j14KeyTyped
        // TODO add your handling code here:
         char c=evt.getKeyChar();
        
        if (!(Character.isDigit(c)) || (c==KeyEvent.VK_BACKSPACE) || (c==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_j14KeyTyped

    private void j15KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_j15KeyTyped
        // TODO add your handling code here:
         char c=evt.getKeyChar();
        
        if (!(Character.isDigit(c)) || (c==KeyEvent.VK_BACKSPACE) || (c==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_j15KeyTyped

    private void j16KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_j16KeyTyped
        // TODO add your handling code here:
         char c=evt.getKeyChar();
        
        if (!(Character.isDigit(c)) || (c==KeyEvent.VK_BACKSPACE) || (c==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_j16KeyTyped

    private void j17KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_j17KeyTyped
        // TODO add your handling code here:
         char c=evt.getKeyChar();
        
        if (!(Character.isDigit(c)) || (c==KeyEvent.VK_BACKSPACE) || (c==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_j17KeyTyped

    private void j18KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_j18KeyTyped
        // TODO add your handling code here:
         char c=evt.getKeyChar();
        
        if (!(Character.isDigit(c)) || (c==KeyEvent.VK_BACKSPACE) || (c==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_j18KeyTyped

    private void j19KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_j19KeyTyped
        // TODO add your handling code here:
         char c=evt.getKeyChar();
        
        if (!(Character.isDigit(c)) || (c==KeyEvent.VK_BACKSPACE) || (c==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_j19KeyTyped

    private void j20KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_j20KeyTyped
        // TODO add your handling code here:
         char c=evt.getKeyChar();
        
        if (!(Character.isDigit(c)) || (c==KeyEvent.VK_BACKSPACE) || (c==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_j20KeyTyped

    private void j21KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_j21KeyTyped
        // TODO add your handling code here:
         char c=evt.getKeyChar();
        
        if (!(Character.isDigit(c)) || (c==KeyEvent.VK_BACKSPACE) || (c==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_j21KeyTyped

    private void j22KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_j22KeyTyped
        // TODO add your handling code here:
         char c=evt.getKeyChar();
        
        if (!(Character.isDigit(c)) || (c==KeyEvent.VK_BACKSPACE) || (c==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_j22KeyTyped

    private void j23KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_j23KeyTyped
        // TODO add your handling code here:
         char c=evt.getKeyChar();
        
        if (!(Character.isDigit(c)) || (c==KeyEvent.VK_BACKSPACE) || (c==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_j23KeyTyped

    private void j24KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_j24KeyTyped
        // TODO add your handling code here:
         char c=evt.getKeyChar();
        
        if (!(Character.isDigit(c)) || (c==KeyEvent.VK_BACKSPACE) || (c==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_j24KeyTyped

    private void j25KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_j25KeyTyped
        // TODO add your handling code here:
         char c=evt.getKeyChar();
        
        if (!(Character.isDigit(c)) || (c==KeyEvent.VK_BACKSPACE) || (c==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_j25KeyTyped

    private void b1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b1ActionPerformed
        // TODO add your handling code here:
        generar_aleatorios();
    }//GEN-LAST:event_b1ActionPerformed

    private void b2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b2ActionPerformed
        calcular_simetria();
        
    }//GEN-LAST:event_b2ActionPerformed

    private void b3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b3ActionPerformed
        
        metodo_principal();
        
    }//GEN-LAST:event_b3ActionPerformed

    private void b4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b4ActionPerformed
        this.dispose();
    }//GEN-LAST:event_b4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b1;
    private javax.swing.JButton b2;
    private javax.swing.JButton b3;
    private javax.swing.JButton b4;
    private javax.swing.JTextField j1;
    private javax.swing.JTextField j10;
    private javax.swing.JTextField j11;
    private javax.swing.JTextField j12;
    private javax.swing.JTextField j13;
    private javax.swing.JTextField j14;
    private javax.swing.JTextField j15;
    private javax.swing.JTextField j16;
    private javax.swing.JTextField j17;
    private javax.swing.JTextField j18;
    private javax.swing.JTextField j19;
    private javax.swing.JTextField j2;
    private javax.swing.JTextField j20;
    private javax.swing.JTextField j21;
    private javax.swing.JTextField j22;
    private javax.swing.JTextField j23;
    private javax.swing.JTextField j24;
    private javax.swing.JTextField j25;
    private javax.swing.JTextField j3;
    private javax.swing.JTextField j4;
    private javax.swing.JTextField j5;
    private javax.swing.JTextField j6;
    private javax.swing.JTextField j7;
    private javax.swing.JTextField j8;
    private javax.swing.JTextField j9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jresultado;
    private javax.swing.JLabel l1;
    private javax.swing.JLabel l10;
    private javax.swing.JLabel l11;
    private javax.swing.JLabel l2;
    private javax.swing.JLabel l3;
    private javax.swing.JLabel l4;
    private javax.swing.JLabel l5;
    private javax.swing.JLabel l7;
    private javax.swing.JLabel l8;
    private javax.swing.JLabel l9;
    // End of variables declaration//GEN-END:variables

//Aqui vamos a insertar código manualmente
    
    //Este método recorre todos los textfields y los almacena en una matriz.
    //El return variable será una matriz.
    public int[][] obtenermatriz(){
        
        int matriz[][] = new int[5][5];
        matriz[0][0] = parseInt(j1.getText());
        matriz[0][1] = parseInt(j2.getText());
        matriz[0][2] = parseInt(j3.getText());
        matriz[0][3] = parseInt(j4.getText());
        matriz[0][4] = parseInt(j5.getText());
        
        matriz[1][0] = parseInt(j6.getText());
        matriz[1][1] = parseInt(j7.getText());
        matriz[1][2] = parseInt(j8.getText());
        matriz[1][3] = parseInt(j9.getText());
        matriz[1][4] = parseInt(j10.getText());
        
        matriz[2][0] = parseInt(j11.getText());
        matriz[2][1] = parseInt(j12.getText());
        matriz[2][2] = parseInt(j13.getText());
        matriz[2][3] = parseInt(j14.getText());
        matriz[2][4] = parseInt(j15.getText());
        
        matriz[3][0] = parseInt(j16.getText());
        matriz[3][1] = parseInt(j17.getText());
        matriz[3][2] = parseInt(j18.getText());
        matriz[3][3] = parseInt(j19.getText());
        matriz[3][4] = parseInt(j20.getText());
        
        matriz[4][0] = parseInt(j21.getText());
        matriz[4][1] = parseInt(j22.getText());
        matriz[4][2] = parseInt(j23.getText());
        matriz[4][3] = parseInt(j24.getText());
        matriz[4][4] = parseInt(j25.getText());
        
        return matriz;
    
    }

    //El siguiente método es para generar valores aleatorios en las casillas
    //Esto es por si se quiere probar rápidamente.
    public void generar_aleatorios(){
        Random rand = new Random();
        
        j1.setText(String.valueOf(rand.nextInt(100)));
        j2.setText(String.valueOf(rand.nextInt(100)));
        j3.setText(String.valueOf(rand.nextInt(100)));
        j4.setText(String.valueOf(rand.nextInt(100)));
        j5.setText(String.valueOf(rand.nextInt(100)));
        
        j6.setText(String.valueOf(rand.nextInt(100)));
        j7.setText(String.valueOf(rand.nextInt(100)));
        j8.setText(String.valueOf(rand.nextInt(100)));
        j9.setText(String.valueOf(rand.nextInt(100)));
        j10.setText(String.valueOf(rand.nextInt(100)));
        
        j11.setText(String.valueOf(rand.nextInt(100)));
        j12.setText(String.valueOf(rand.nextInt(100)));
        j13.setText(String.valueOf(rand.nextInt(100)));
        j14.setText(String.valueOf(rand.nextInt(100)));
        j15.setText(String.valueOf(rand.nextInt(100)));
        
        j16.setText(String.valueOf(rand.nextInt(100)));
        j17.setText(String.valueOf(rand.nextInt(100)));
        j18.setText(String.valueOf(rand.nextInt(100)));
        j19.setText(String.valueOf(rand.nextInt(100)));
        j20.setText(String.valueOf(rand.nextInt(100)));
        
        j21.setText(String.valueOf(rand.nextInt(100)));
        j22.setText(String.valueOf(rand.nextInt(100)));
        j23.setText(String.valueOf(rand.nextInt(100)));
        j24.setText(String.valueOf(rand.nextInt(100)));
        j25.setText(String.valueOf(rand.nextInt(100)));
        
    }
    
    public void calcular_simetria(){
        
        int matriz[][] = obtenermatriz();
        
        //La siguiente rutina chequea la simetria, con solo que falle uno se acumula un contador
        // Luego con un IF se descarta.
        int contador = 0;
        for (int i=0; i<5; i++){
            for (int j=0; j<5; j++){
                if (matriz[i][j] != matriz[j][i]){
                    contador++;
                }
            }
        }
        
        if (contador >0){
            jresultado.setText("No es simétrica");
        }else{
            jresultado.setText("Si es simétrica");
        }
        
    }

    public void metodo_principal(){
        //Traemos la matriz de la interface (GUI)
        int matriz[][] = obtenermatriz();
        //Se instancia el Algoritmo
        Dijkstra dijkstra = new Dijkstra();
        //Se invoca al método, y se le manda la matriz, esperando un resultado
        String resultado = null;
        resultado = dijkstra.empezar(matriz);
        //Ahora desplegamos el resultado en un label
        jresultado.setText(resultado);
        
    }

}
